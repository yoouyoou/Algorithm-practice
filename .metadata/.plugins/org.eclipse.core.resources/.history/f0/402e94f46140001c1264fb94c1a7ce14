package b_temp;

public class Main {
	
	public static void swap(int arr[], int a, int b) {
		int temp = arr[a];
		arr[a] = arr[b];
		arr[b] = temp;
	}
	
	public static void DualPivotQuickSort(int arr[], int left, int right) {
	    // lp : Left Pivot, rp : Right Pivot
		 
	    if(left <= right){
	        // 양 끝의 값을 비교한다.
	        if(arr[left] > arr[right])
	            swap(arr, left, right); // lp가 크면 lp와 rp의 위치를 바꾸어준다. 
	        
	        int p1 = arr[left]; // 분할의 가장 왼쪽 값
	        int p2 = arr[right]; // 분할의 가장 오른쪽 값
	        int l = left + 1; 
	        int k = left + 1;
	        int g = right - 1;	      
	        
		    while(k <= g){ //서로 엇갈릴 때 까지
	        if(arr[k] < p1){
	            swap(arr, k, l);
	            l++;
	        }else {
	            if(arr[k] > p2){
	                while(arr[g] > p2 && k < g)
	                    g--;
	                
	                swap(arr, k, g);
	                g--;
	 
	                if(arr[k] < p1){
	                    swap(arr, k, l);
	                    l++;
	                }
	            }
	        }
	        k++;
	    }
		    l--;
		    g++;
		    
		    swap(arr, left, l);
		    swap(arr, right, g);
		    DualPivotQuickSort(arr, left, l - 1);
		    DualPivotQuickSort(arr, l + 1, g-1);
		    DualPivotQuickSort(arr, g + 1, right);
	    }
	}

	public static void main(String[] args) {
		int[] A = {3, 1, 2, 4, 9, 6, 8, 7, 10, 5};
		System.out.println("정렬 전");
		for(int i = 0; i < A.length; i++)
			System.out.print(A[i] + " ");
		System.out.println("정렬 후");
		DualPivotQuickSort(A, 0, 9);
		for(int i = 0; i < A.length; i++)
			System.out.println(A[i] + " ");
	}
}
